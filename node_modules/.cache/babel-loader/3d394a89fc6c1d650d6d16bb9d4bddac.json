{"ast":null,"code":"var _jsxFileName = \"/Users/zhiheng.wang/react-project/newnoe/first/src/container/Person/index.jsx\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Person extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addPerson = () => {\n      const name = this.nameNode.value;\n      const age = this.ageNode.value;\n      const personObj = {\n        id: nanoid(),\n        name: name,\n        age: age\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ahhaha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: c => {\n          this.nameNode = c;\n        },\n        type: \"text\",\n        placeholder: \"\\u8F93\\u5165\\u540D\\u5B57\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: c => {\n          this.ageNode = c;\n        },\n        type: \"text\",\n        placeholder: \"\\u8F93\\u5165\\u5E74\\u9F84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addPerson,\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \") }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  persons: state.person\n}), {})(Person);","map":{"version":3,"sources":["/Users/zhiheng.wang/react-project/newnoe/first/src/container/Person/index.jsx"],"names":["React","Component","nanoid","connect","Person","addPerson","name","nameNode","value","age","ageNode","personObj","id","render","c","state","persons","person"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC3BI,SAD2B,GACjB,MAAI;AACV,YAAMC,IAAI,GAAG,KAAKC,QAAL,CAAcC,KAA3B;AACA,YAAMC,GAAG,GAAG,KAAKC,OAAL,CAAaF,KAAzB;AACA,YAAMG,SAAS,GAAG;AAACC,QAAAA,EAAE,EAACV,MAAM,EAAV;AAAaI,QAAAA,IAAI,EAACA,IAAlB;AAAuBG,QAAAA,GAAG,EAACA;AAA3B,OAAlB;AAEH,KAN0B;AAAA;;AAO3BI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,GAAG,EAAGC,CAAD,IAAK;AAAC,eAAKP,QAAL,GAAcO,CAAd;AAAgB,SAAlC;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,GAAG,EAAGA,CAAD,IAAK;AAAC,eAAKJ,OAAL,GAAaI,CAAb;AAAe,SAAjC;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKT,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAxB0B;;AA0B/B,eAAeF,OAAO,CAClBY,KAAK,KAAG;AAACC,EAAAA,OAAO,EAACD,KAAK,CAACE;AAAf,CAAH,CADa,EAElB,EAFkB,CAAP,CAGbb,MAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {nanoid} from 'nanoid'\nimport {connect} from 'react-redux'\n\nclass Person extends Component {\n    addPerson=()=>{\n        const name = this.nameNode.value\n        const age = this.ageNode.value\n        const personObj = {id:nanoid(),name:name,age:age}\n\n    }\n    render() {\n        return (\n            <div>\n                <h2>ahhaha\n                </h2>\n                <input ref={(c)=>{this.nameNode=c}} type=\"text\" placeholder=\"输入名字\"/>\n                <input ref={(c)=>{this.ageNode=c}} type=\"text\" placeholder=\"输入年龄\"/>\n                <button onClick={this.addPerson}>添加</button>\n                <ul>\n                    {\n                        // this.props.person.map(personObj=>{\n                            // return <li key={personObj.id}>personObjname</li>\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\nexport default connect(\n    state=>({persons:state.person}),\n    {}\n)(Person)\n"]},"metadata":{},"sourceType":"module"}